import discord
from discord.ext import commands
from ..utils.database import db, UserLevel, LevelConfig
from datetime import datetime, timedelta
import asyncio

class LevelCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.voice_users = {}  # {user_id: start_time}

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.author.bot or not message.guild:
            return

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Ä–æ–≤–Ω–µ–π –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
        config = LevelConfig.query.filter_by(guild_id=message.guild.id).first()
        if not config:
            config = LevelConfig(guild_id=message.guild.id)
            db.session.add(config)
            db.session.commit()

        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = UserLevel.query.filter_by(user_id=message.author.id, guild_id=message.guild.id).first()
        if not user:
            user = UserLevel(user_id=message.author.id, guild_id=message.guild.id)
            db.session.add(user)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω (1 —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∏–Ω—É—Ç—É)
        now = datetime.utcnow()
        if user.last_message and (now - user.last_message).total_seconds() < 60:
            return

        # –ù–∞—á–∏—Å–ª—è–µ–º XP
        user.xp += config.xp_per_message
        user.last_message = now

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
        old_level = user.level
        # –§–æ—Ä–º—É–ª–∞: —É—Ä–æ–≤–µ–Ω—å = sqrt(XP / 100) + 1
        new_level = int((user.xp / 100) ** 0.5) + 1

        if new_level > old_level:
            user.level = new_level
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
            try:
                await message.channel.send(f"üéâ {message.author.mention} –¥–æ—Å—Ç–∏–≥ {new_level} —É—Ä–æ–≤–Ω—è!")
            except:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É

        db.session.commit()

    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        if member.bot:
            return

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
        if before.channel is None and after.channel is not None:
            self.voice_users[member.id] = datetime.utcnow()

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        elif before.channel is not None and after.channel is None:
            if member.id in self.voice_users:
                start_time = self.voice_users.pop(member.id)
                duration = (datetime.utcnow() - start_time).total_seconds()

                # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user = UserLevel.query.filter_by(user_id=member.id, guild_id=member.guild.id).first()
                if not user:
                    user = UserLevel(user_id=member.id, guild_id=member.guild.id)
                    db.session.add(user)

                # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –≤ –≥–æ–ª–æ—Å–µ
                user.voice_time += int(duration)

                # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Ä–æ–≤–Ω–µ–π
                config = LevelConfig.query.filter_by(guild_id=member.guild.id).first()
                if config:
                    # –ù–∞—á–∏—Å–ª—è–µ–º XP –∑–∞ –≤—Ä–µ–º—è –≤ –≥–æ–ª–æ—Å–µ (–∑–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)
                    xp_earned = int(duration // 60) * config.xp_per_minute
                    user.xp += xp_earned

                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
                    old_level = user.level
                    new_level = int((user.xp / 100) ** 0.5) + 1

                    if new_level > old_level:
                        user.level = new_level
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        channel = member.guild.system_channel or next((c for c in member.guild.text_channels if c.permissions_for(member.guild.me).send_messages), None)
                        if channel:
                            try:
                                await channel.send(f"üéâ {member.mention} –¥–æ—Å—Ç–∏–≥ {new_level} —É—Ä–æ–≤–Ω—è –∑–∞ –≥–æ–ª–æ—Å–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!")
                            except:
                                pass

                db.session.commit()

    @commands.hybrid_command(name="rank", description="–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à —Ä–∞–Ω–≥ –∏–ª–∏ —Ä–∞–Ω–≥ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def rank(self, ctx, member: discord.Member = None):
        target = member or ctx.author
        user = UserLevel.query.filter_by(user_id=target.id, guild_id=ctx.guild.id).first()
        if not user:
            await ctx.send(f"‚ùå –£ {target.mention} –µ—â–µ –Ω–µ—Ç —Ä–∞–Ω–≥–∞.")
            return

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
        all_users = UserLevel.query.filter_by(guild_id=ctx.guild.id).order_by(UserLevel.xp.desc()).all()
        rank = next((i + 1 for i, u in enumerate(all_users) if u.user_id == target.id), 0)

        await ctx.send(
            f"üìä **{target.display_name}**\n"
            f"–£—Ä–æ–≤–µ–Ω—å: {user.level}\n"
            f"XP: {user.xp}\n"
            f"–ì–æ–ª–æ—Å–æ–≤–æ–µ –≤—Ä–µ–º—è: {user.voice_time // 3600}—á {user.voice_time % 3600 // 60}–º\n"
            f"–†–∞–Ω–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: #{rank}"
        )

    @commands.hybrid_command(name="leaderboard", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ XP")
    async def leaderboard(self, ctx):
        users = UserLevel.query.filter_by(guild_id=ctx.guild.id).order_by(UserLevel.xp.desc()).limit(10).all()
        if not users:
            await ctx.send("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ–ø–∞.")
            return

        embed = discord.Embed(title="üèÜ –¢–æ–ø-10 –ø–æ XP", color=0xffd700)
        for i, u in enumerate(users, 1):
            member = ctx.guild.get_member(u.user_id)
            name = member.display_name if member else f"ID: {u.user_id}"
            embed.add_field(
                name=f"{i}. {name}",
                value=f"–£—Ä–æ–≤–µ–Ω—å: {u.level} | XP: {u.xp}",
                inline=False
            )

        await ctx.send(embed=embed)

    @commands.hybrid_command(name="voice_leaderboard", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –≤—Ä–µ–º–µ–Ω–∏")
    async def voice_leaderboard(self, ctx):
        users = UserLevel.query.filter_by(guild_id=ctx.guild.id).order_by(UserLevel.voice_time.desc()).limit(10).all()
        if not users:
            await ctx.send("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ–ø–∞.")
            return

        embed = discord.Embed(title="üéôÔ∏è –¢–æ–ø-10 –ø–æ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –≤—Ä–µ–º–µ–Ω–∏", color=0x00ff00)
        for i, u in enumerate(users, 1):
            member = ctx.guild.get_member(u.user_id)
            name = member.display_name if member else f"ID: {u.user_id}"
            hours = u.voice_time // 3600
            minutes = (u.voice_time % 3600) // 60
            embed.add_field(
                name=f"{i}. {name}",
                value=f"–í—Ä–µ–º—è: {hours}—á {minutes}–º",
                inline=False
            )

        await ctx.send(embed=embed)

    @commands.hybrid_command(name="set_xp_rate", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å XP –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –º–∏–Ω—É—Ç—É –≤ –≥–æ–ª–æ—Å–µ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã)")
    @commands.has_permissions(administrator=True)
    async def set_xp_rate(self, ctx, xp_per_message: int = None, xp_per_minute: int = None):
        config = LevelConfig.query.filter_by(guild_id=ctx.guild.id).first()
        if not config:
            config = LevelConfig(guild_id=ctx.guild.id)
            db.session.add(config)

        if xp_per_message is not None:
            config.xp_per_message = xp_per_message
        if xp_per_minute is not None:
            config.xp_per_minute = xp_per_minute

        db.session.commit()

        await ctx.send(
            f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ XP –æ–±–Ω–æ–≤–ª–µ–Ω—ã!\n"
            f"XP –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {config.xp_per_message}\n"
            f"XP –∑–∞ –º–∏–Ω—É—Ç—É –≤ –≥–æ–ª–æ—Å–µ: {config.xp_per_minute}"
        )

async def setup(bot):
    await bot.add_cog(LevelCog(bot))