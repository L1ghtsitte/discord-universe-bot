import discord
from discord.ext import commands
import psutil
import platform
from datetime import datetime, timedelta


class AdminFullCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.hybrid_command(name="bot_status", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞")
    @commands.has_permissions(administrator=True)
    async def bot_status(self, ctx):
        embed = discord.Embed(title="ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞", color=0x00ff00)

        # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        cpu_percent = psutil.cpu_percent()
        memory = psutil.virtual_memory()
        disk = psutil.disk_usage('/')

        # Uptime
        uptime = datetime.utcnow() - self.bot.start_time if hasattr(self.bot, 'start_time') else timedelta(seconds=0)
        hours, remainder = divmod(int(uptime.total_seconds()), 3600)
        minutes, seconds = divmod(remainder, 60)

        embed.add_field(name="–°–µ—Ä–≤–µ—Ä–æ–≤", value=len(self.bot.guilds), inline=True)
        embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=len(self.bot.users), inline=True)
        embed.add_field(name="–ó–∞–¥–µ—Ä–∂–∫–∞", value=f"{self.bot.latency * 1000:.0f} –º—Å", inline=True)
        embed.add_field(name="Uptime", value=f"{hours}—á {minutes}–º {seconds}—Å", inline=True)
        embed.add_field(name="CPU", value=f"{cpu_percent}%", inline=True)
        embed.add_field(name="RAM", value=f"{memory.percent}%", inline=True)
        embed.add_field(name="–î–∏—Å–∫", value=f"{disk.percent}%", inline=True)
        embed.add_field(name="Python", value=platform.python_version(), inline=True)
        embed.add_field(name="Discord.py", value=discord.__version__, inline=True)

        await ctx.send(embed=embed)

    @commands.hybrid_command(name="reload_cog", description="–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–≥")
    @commands.is_owner()
    async def reload_cog(self, ctx, cog_name: str):
        try:
            await self.bot.reload_extension(f"cogs.{cog_name}")
            await ctx.send(f"‚úÖ –ö–æ–≥ `{cog_name}` –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω.")
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–≥–∞ `{cog_name}`: {e}")

    @commands.hybrid_command(name="load_cog", description="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–≥")
    @commands.is_owner()
    async def load_cog(self, ctx, cog_name: str):
        try:
            await self.bot.load_extension(f"cogs.{cog_name}")
            await ctx.send(f"‚úÖ –ö–æ–≥ `{cog_name}` –∑–∞–≥—Ä—É–∂–µ–Ω.")
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–≥–∞ `{cog_name}`: {e}")

    @commands.hybrid_command(name="unload_cog", description="–í—ã–≥—Ä—É–∑–∏—Ç—å –∫–æ–≥")
    @commands.is_owner()
    async def unload_cog(self, ctx, cog_name: str):
        try:
            await self.bot.unload_extension(f"cogs.{cog_name}")
            await ctx.send(f"‚úÖ –ö–æ–≥ `{cog_name}` –≤—ã–≥—Ä—É–∂–µ–Ω.")
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –∫–æ–≥–∞ `{cog_name}`: {e}")

    @commands.hybrid_command(name="server_info", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ")
    @commands.has_permissions(administrator=True)
    async def server_info(self, ctx):
        guild = ctx.guild
        embed = discord.Embed(title=f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}", color=0x00ff00)

        embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü", value=guild.owner.mention if guild.owner else "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω", inline=True)
        embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value=guild.member_count, inline=True)
        embed.add_field(name="–ö–∞–Ω–∞–ª–æ–≤", value=len(guild.channels), inline=True)
        embed.add_field(name="–†–æ–ª–µ–π", value=len(guild.roles), inline=True)
        embed.add_field(name="–≠–º–æ–¥–∑–∏", value=len(guild.emojis), inline=True)
        embed.add_field(name="–°—Ç–∏–∫–µ—Ä—ã", value=len(guild.stickers), inline=True)
        embed.add_field(name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", value=guild.created_at.strftime("%d.%m.%Y %H:%M"), inline=True)
        embed.add_field(name="–£—Ä–æ–≤–µ–Ω—å –±—É—Å—Ç–∞", value=guild.premium_tier, inline=True)
        embed.add_field(name="–ë—É—Å—Ç–µ—Ä–æ–≤", value=guild.premium_subscription_count, inline=True)

        if guild.icon:
            embed.set_thumbnail(url=guild.icon.url)

        await ctx.send(embed=embed)


async def setup(bot):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    if not hasattr(bot, 'start_time'):
        bot.start_time = datetime.utcnow()
    await bot.add_cog(AdminFullCog(bot))