import discord
from discord.ext import commands
from ..utils.database import db, FamilyTree
import asyncio


class FamilyCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.hybrid_command(name="marry", description="–ü–æ–∂–µ–Ω–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    async def marry(self, ctx, member: discord.Member):
        if member.id == ctx.author.id:
            await ctx.send("‚ùå –ù–µ–ª—å–∑—è –∂–µ–Ω–∏—Ç—å—Å—è –Ω–∞ —Å–∞–º–æ–º —Å–µ–±–µ!")
            return

        if member.bot:
            await ctx.send("‚ùå –ù–µ–ª—å–∑—è –∂–µ–Ω–∏—Ç—å—Å—è –Ω–∞ –±–æ—Ç–µ!")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∂–µ–Ω–∞—Ç –ª–∏ –∞–≤—Ç–æ—Ä
        author_record = FamilyTree.query.filter_by(user_id=ctx.author.id, guild_id=ctx.guild.id).first()
        if author_record and author_record.spouse_id and not author_record.divorced_at:
            await ctx.send("‚ùå –í—ã —É–∂–µ –∂–µ–Ω–∞—Ç—ã!")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∂–µ–Ω–∞—Ç –ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        member_record = FamilyTree.query.filter_by(user_id=member.id, guild_id=ctx.guild.id).first()
        if member_record and member_record.spouse_id and not member_record.divorced_at:
            await ctx.send(f"‚ùå {member.mention} —É–∂–µ –∂–µ–Ω–∞—Ç(–∞)!")
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
        await ctx.send(
            f"{member.mention}, {ctx.author.mention} –¥–µ–ª–∞–µ—Ç –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä—É–∫–∏ –∏ —Å–µ—Ä–¥—Ü–∞! –£ –≤–∞—Å –µ—Å—Ç—å 60 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å ‚úÖ.")

        # –û–∂–∏–¥–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é
        def check(reaction, user):
            return user == member and str(reaction.emoji) == '‚úÖ' and reaction.message.id == ctx.message.id

        try:
            await ctx.message.add_reaction('‚úÖ')
            reaction, user = await self.bot.wait_for('reaction_add', timeout=60.0, check=check)
        except asyncio.TimeoutError:
            await ctx.send("üíî –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
            return

        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if not author_record:
            author_record = FamilyTree(user_id=ctx.author.id, guild_id=ctx.guild.id)
            db.session.add(author_record)

        if not member_record:
            member_record = FamilyTree(user_id=member.id, guild_id=ctx.guild.id)
            db.session.add(member_record)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏
        author_record.spouse_id = member.id
        author_record.married_at = datetime.utcnow()
        author_record.divorced_at = None

        member_record.spouse_id = ctx.author.id
        member_record.married_at = datetime.utcnow()
        member_record.divorced_at = None

        db.session.commit()

        await ctx.send(f"üíñ {ctx.author.mention} –∏ {member.mention} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∂–µ–Ω–∞—Ç—ã! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!")

    @commands.hybrid_command(name="divorce", description="–†–∞–∑–≤–µ—Å—Ç–∏—Å—å —Å —Å—É–ø—Ä—É–≥–æ–º")
    async def divorce(self, ctx):
        record = FamilyTree.query.filter_by(user_id=ctx.author.id, guild_id=ctx.guild.id).first()
        if not record or not record.spouse_id:
            await ctx.send("‚ùå –í—ã –Ω–µ –∂–µ–Ω–∞—Ç—ã!")
            return

        if record.divorced_at:
            await ctx.send("‚ùå –í—ã —É–∂–µ —Ä–∞–∑–≤–µ–¥–µ–Ω—ã!")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É–ø—Ä—É–≥–µ
        spouse = ctx.guild.get_member(record.spouse_id)
        spouse_name = spouse.mention if spouse else f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {record.spouse_id}"

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞–∑–≤–æ–¥–∞
        await ctx.send(
            f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å —Å {spouse_name}? –û—Ç—Ä–µ–∞–≥–∏—Ä—É–π—Ç–µ ‚ùå –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å.")

        def check(reaction, user):
            return user == ctx.author and str(reaction.emoji) == '‚ùå' and reaction.message.id == ctx.message.id

        try:
            await ctx.message.add_reaction('‚ùå')
            await self.bot.wait_for('reaction_add', timeout=30.0, check=check)
            await ctx.send("‚ù§Ô∏è‚Äçü©π –†–∞–∑–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è!")
            return
        except asyncio.TimeoutError:
            pass

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –∞–≤—Ç–æ—Ä–∞
        record.divorced_at = datetime.utcnow()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å —Å—É–ø—Ä—É–≥–∞
        spouse_record = FamilyTree.query.filter_by(user_id=record.spouse_id, guild_id=ctx.guild.id).first()
        if spouse_record:
            spouse_record.spouse_id = None
            spouse_record.divorced_at = datetime.utcnow()

        db.session.commit()

        await ctx.send(f"üíî {ctx.author.mention} –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —Ä–∞–∑–≤–µ–ª—Å—è(–∞—Å—å) —Å {spouse_name}.")

    @commands.hybrid_command(name="family", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–µ–º–µ–π–Ω–æ–µ –¥—Ä–µ–≤–æ")
    async def family_tree(self, ctx, member: discord.Member = None):
        target = member or ctx.author

        record = FamilyTree.query.filter_by(user_id=target.id, guild_id=ctx.guild.id).first()
        if not record:
            await ctx.send(f"‚ùå –£ {target.mention} –Ω–µ—Ç —Å–µ–º–µ–π–Ω—ã—Ö —Å–≤—è–∑–µ–π.")
            return

        embed = discord.Embed(title=f"üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω–æ–µ –¥—Ä–µ–≤–æ {target.display_name}", color=0xff69b4)

        # –°—É–ø—Ä—É–≥(–∞)
        if record.spouse_id:
            spouse = ctx.guild.get_member(record.spouse_id)
            status = " (—Ä–∞–∑–≤–µ–¥–µ–Ω)" if record.divorced_at else ""
            embed.add_field(name="–°—É–ø—Ä—É–≥(–∞)",
                            value=f"{spouse.mention if spouse else f'ID: {record.spouse_id}'}{status}", inline=False)

        # –†–æ–¥–∏—Ç–µ–ª–∏ (–µ—Å–ª–∏ –±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã)
        parents = []
        if hasattr(record, 'parent1_id') and record.parent1_id:
            parent1 = ctx.guild.get_member(record.parent1_id)
            parents.append(parent1.mention if parent1 else f"ID: {record.parent1_id}")
        if hasattr(record, 'parent2_id') and record.parent2_id:
            parent2 = ctx.guild.get_member(record.parent2_id)
            parents.append(parent2.mention if parent2 else f"ID: {record.parent2_id}")

        if parents:
            embed.add_field(name="–†–æ–¥–∏—Ç–µ–ª–∏", value=", ".join(parents), inline=False)

        # –î–µ—Ç–∏ (–µ—Å–ª–∏ –±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã)
        children = []
        if hasattr(record, 'children') and record.children:
            for child_id in record.children:
                child = ctx.guild.get_member(child_id)
                children.append(child.mention if child else f"ID: {child_id}")

        if children:
            embed.add_field(name="–î–µ—Ç–∏", value=", ".join(children), inline=False)

        await ctx.send(embed=embed)

    @commands.hybrid_command(name="adopt", description="–£—Å—ã–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def adopt(self, ctx, member: discord.Member):
        """–£—Å—ã–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)"""
        if member.id == ctx.author.id:
            await ctx.send("‚ùå –ù–µ–ª—å–∑—è —É—Å—ã–Ω–æ–≤–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!")
            return

        if member.bot:
            await ctx.send("‚ùå –ù–µ–ª—å–∑—è —É—Å—ã–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞!")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–¥–∏—Ç–µ–ª–∏
        member_record = FamilyTree.query.filter_by(user_id=member.id, guild_id=ctx.guild.id).first()
        if member_record and (member_record.parent1_id or member_record.parent2_id):
            await ctx.send(f"‚ùå –£ {member.mention} —É–∂–µ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª–∏!")
            return

        await ctx.send(
            f"{member.mention}, {ctx.author.mention} —Ö–æ—á–µ—Ç –≤–∞—Å —É—Å—ã–Ω–æ–≤–∏—Ç—å! –£ –≤–∞—Å –µ—Å—Ç—å 60 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å ‚úÖ.")

        def check(reaction, user):
            return user == member and str(reaction.emoji) == '‚úÖ' and reaction.message.id == ctx.message.id

        try:
            await ctx.message.add_reaction('‚úÖ')
            reaction, user = await self.bot.wait_for('reaction_add', timeout=60.0, check=check)
        except asyncio.TimeoutError:
            await ctx.send("üíî –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–± —É—Å—ã–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–µ–∫–ª–æ.")
            return

        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏
        if not member_record:
            member_record = FamilyTree(user_id=member.id, guild_id=ctx.guild.id)
            db.session.add(member_record)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∞ –∫–∞–∫ –ø–µ—Ä–≤–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
        member_record.parent1_id = ctx.author.id

        db.session.commit()

        await ctx.send(f"üë®‚Äçüëß {ctx.author.mention} —Ç–µ–ø–µ—Ä—å —Ä–æ–¥–∏—Ç–µ–ª—å {member.mention}!")


async def setup(bot):
    await bot.add_cog(FamilyCog(bot))