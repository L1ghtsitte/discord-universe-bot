from PIL import Image, ImageDraw, ImageFont, ImageOps
import requests
from io import BytesIO


def generate_profile_card(user_data, avatar_url, guild_name, rank, clan_name=None, clan_role=None):
    # –°–æ–∑–¥–∞—ë–º —Ñ–æ–Ω
    img = Image.new('RGB', (800, 400), color=(30, 30, 30))
    d = ImageDraw.Draw(img)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    try:
        response = requests.get(avatar_url)
        avatar = Image.open(BytesIO(response.content)).convert("RGBA")

        # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º
        avatar = avatar.resize((200, 200))

        # –°–æ–∑–¥–∞—ë–º –∫—Ä—É–≥–ª—É—é –º–∞—Å–∫—É
        mask = Image.new('L', (200, 200), 0)
        mask_draw = ImageDraw.Draw(mask)
        mask_draw.ellipse((0, 0, 200, 200), fill=255)

        # –í—Å—Ç–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
        img.paste(avatar, (50, 80), mask)
    except:
        d.rectangle([50, 80, 250, 280], fill=(100, 100, 100))
        d.text((90, 170), "NO IMG", fill=(255, 255, 255))

    # –®—Ä–∏—Ñ—Ç—ã
    try:
        font_big = ImageFont.truetype("arial.ttf", 48)
        font_med = ImageFont.truetype("arial.ttf", 32)
        font_small = ImageFont.truetype("arial.ttf", 24)
        font_tiny = ImageFont.truetype("arial.ttf", 20)
    except:
        font_big = ImageFont.load_default()
        font_med = ImageFont.load_default()
        font_small = ImageFont.load_default()
        font_tiny = ImageFont.load_default()

    # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    d.text((280, 80), user_data['name'], fill=(255, 255, 255), font=font_big)

    # –£—Ä–æ–≤–µ–Ω—å –∏ —Ä–∞–Ω–≥
    d.text((280, 150), f"–£—Ä–æ–≤–µ–Ω—å: {user_data['level']}", fill=(0, 255, 0), font=font_med)
    d.text((280, 190), f"–†–∞–Ω–≥: #{rank}", fill=(255, 215, 0), font=font_med)
    d.text((280, 230), f"–°–µ—Ä–≤–µ—Ä: {guild_name}", fill=(100, 100, 255), font=font_small)

    # –ö–ª–∞–Ω
    if clan_name:
        color = (255, 105, 180) if clan_role == "leader" else (105, 255, 180) if clan_role in ["officer",
                                                                                               "elder"] else (180, 180,
                                                                                                              255)
        d.text((50, 300), f"–ö–ª–∞–Ω: {clan_name}", fill=color, font=font_small)
        if clan_role:
            role_names = {"leader": "–õ–∏–¥–µ—Ä", "officer": "–û—Ñ–∏—Ü–µ—Ä", "elder": "–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞", "warrior": "–í–æ–∏–Ω",
                          "member": "–£—á–∞—Å—Ç–Ω–∏–∫"}
            d.text((50, 330), f"–†–æ–ª—å: {role_names.get(clan_role, clan_role)}", fill=color, font=font_tiny)

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    d.text((450, 80), "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:", fill=(255, 255, 255), font=font_med)
    d.text((450, 130), f"ü™ô –ú–æ–Ω–µ—Ç—ã: {user_data['coins']:,}", fill=(255, 255, 0), font=font_small)
    d.text((450, 165), f"üíé –ö—Ä–∏—Å—Ç–∞–ª–ª—ã: {user_data['crystals']:,}", fill=(0, 255, 255), font=font_small)
    d.text((450, 200), f"‚Çø BitCrystal: {user_data['crypto_bitcrystal']:.2f}", fill=(255, 255, 255), font=font_small)
    d.text((450, 235), f"üåå AstroToken: {user_data['crypto_astrotoken']:.2f}", fill=(200, 200, 255), font=font_small)

    # –ë–µ–π–¥–∂–∏
    if user_data.get('badges'):
        d.text((450, 280), "üéñÔ∏è –ë–µ–π–¥–∂–∏:", fill=(255, 255, 255), font=font_small)
        for i, badge in enumerate(user_data['badges'][:3]):
            d.text((450, 310 + i * 25), f"‚Ä¢ {badge}", fill=(255, 200, 0), font=font_tiny)

    # –†–∞–º–∫–∞
    d.rectangle([0, 0, 799, 399], outline=(100, 100, 100), width=2)

    buf = BytesIO()
    img.save(buf, format='PNG')
    buf.seek(0)
    return buf